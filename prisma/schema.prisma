generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  user_name String @db.VarChar(10)
  user_nick String @unique @db.VarChar(15)
  user_id   String @unique @db.VarChar(15)
  user_pw   String @db.VarChar(200)
  pw_salt   String @db.VarChar(200)
  user_email String @unique @db.VarChar(30)
  marketing Boolean
  user_introduce String? @default("") @db.VarChar(50)
  profile_url String? @default("") @db.VarChar(250)
  created_at DateTime @default(now())

  posts Post[]
  comments_user Comment[]
  save_user Save_post[]
  follower_user Follow[] @relation("follower") 
  following_user Follow[] @relation("following")
  likes_user Like[]
}

model Post {
  post_id Int @id @default(autoincrement())
  post_content String @db.VarChar(500) 
  likeCount Int @default(0)
  color_extract String @db.VarChar(100) @default("")
  post_url String @db.VarChar(2000)
  user_gender String @db.VarChar(6)
  user_tall String @db.VarChar(4)
  user_weight String @db.VarChar(4)
  created_at DateTime @default(now())

  post_users User @relation(fields: [post_user], references: [id])
  post_user Int

  comments_post Comment[]
  save_posts Save_post[]
  likes_user Like[]
}

model Like {
  like_users User @relation(fields: [like_user], references: [id])
  like_user Int

  like_posts Post @relation(fields: [like_post], references: [post_id])
  like_post Int

  @@id(fields: [like_user, like_post])
}

model Comment {
  comment_id Int @id @default(autoincrement())
  comment String @db.VarChar(200)
  created_at DateTime @default(now())

  comment_users User @relation(fields: [commenter], references: [id])
  commenter Int

  comment_posts Post @relation(fields: [target_post], references: [post_id])
  target_post Int
}

model Save_post {
  saved_users User @relation(fields: [stored_user], references: [id])
  stored_user Int
  
  saved_posts Post @relation(fields: [stored_post], references: [post_id])
  stored_post Int

  created_at DateTime @default(now())

  @@id(fields: [stored_user, stored_post])
}

model Follow {
  follower User @relation("follower",fields: [follower_id], references: [id])
  follower_id Int

  following User @relation("following",fields: [following_id], references: [id])
  following_id Int

  created_at DateTime @default(now())

  @@id(fields: [follower_id, following_id])
}